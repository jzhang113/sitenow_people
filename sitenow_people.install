<?php
/**
 * @file
 *
 * Install and uninstall tasks for SiteNow People
 */

 /**
  * Implements hook_enable().
  */
function sitenow_people_enable() {
  // Revert the sitenow_people feature.
  $feature = features_get_features('sitenow_people');
  $components = array_keys($feature->info['features']);
  features_revert(array('sitenow_people' => $components));
}

/**
 * Implements hook_disable().
 */
function sitenow_people_disable() {
  // Gather all the content that might have been created while this
  // module was enabled. Simple selects still use db_query().
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'people'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once.
  node_delete_multiple($nids);

  // Loop over each of the fields used by only the people content type and delete
  // all instances of the field, their data, and the field itself.
  foreach (field_info_field_map() as $field_name => $field_info) {
    if (array_key_exists('node', $field_info['bundles'])) {
      if (in_array('people', $field_info['bundles']['node'])) {
        if (count($field_info['bundles']['node'] == 1)) {
          field_delete_field($field_name);
        }
      }
    }
  }

  // Loop over any remaining field instances attached to the people content type
  // and delete them individually.
  $instances = field_info_instances('node', 'people');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete the people content type.
  node_type_delete('people');

  // Delete the person_type taxonomy.
  $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'person_type'")->fetchField();
  taxonomy_vocabulary_delete($vid);
  // Delete the sitenow_people_department taxonomy.
  $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'sitenow_people_department'")->fetchField();
  taxonomy_vocabulary_delete($vid);

  // Purge all field information.
  field_purge_batch(1000);

  // Disable submodules of SiteNow People
  $module_list = array('sitenow_people_panelizer', 'sitenow_people_panels',);
  $disable_dependents = FALSE;
  module_disable($module_list, $disable_dependents);
}

/**
* Load and save all people nodes that have special characters in the titleto fix
* any existing issues caused by using node tokens rather than entity tokens.
*/
function sitenow_people_update_7100(&$sandbox) {
  // Enable entity_token.
  module_enable(array('entity_token'));
  // Revert feature first so nodes save using correct token.
  $feature = features_get_features('sitenow_people');
  $components = array_keys($feature->info['features']);
  features_revert(array('sitenow_people' => $components));

  // EFQ to load and save all person nodes.
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'people')
    ->propertyCondition('title', '&#', 'CONTAINS')
    ->addMetaData('account', user_load(1)); // Run the query as user 1.

  $result = $query->execute();

  if (isset($result['node'])) {
    $people_nids = array_keys($result['node']);
    $people = entity_load('node', $people_nids);

    foreach ($people as $person) {
      node_save($person);
    }
  }
}
