<?php
/**
 * @file
 */

// Drupal needs this blank file.

/**
* Implements hook_form_FORM_ID_alter().
*
* disable edit and deletion of demo content.
*/

function sitenow_people_content_form_people_node_form_alter(&$form, &$form_state, $form_id) {
  // check to see if this is add form or edit form
  if(isset($form['nid']['#value'])) {
    // call custom function to see if node has been migrated
    $is_demo = _sitenow_people_content_get_demo_content($form['nid']['#value']);
    // if node has been migrated disable form and set warning to notify users
    if ($is_demo == TRUE) {
      drupal_set_message(t("This person is demo content and cannot be edited or deleted.<br/>To remove this person you must <a href='@disable-people-content'>disable demo content for people</a>.", array('@disable-people-content' => url('admin/apps/local/sitenow_people/configure'))), 'warning');
      $form['#disabled'] = TRUE;
    }
  }
}

/**
* Implements hook_form_FORM_ID_alter().
*
* disable deletion of demo content from node/$nid/delete.
*/

function sitenow_people_content_form_node_delete_confirm_alter(&$form, &$form_state, $form_id) {
  if ($form['#node']->type == 'people' && _sitenow_people_content_get_demo_content($form['#node']->nid) == TRUE) {
    $form['actions']['submit']['#access'] = FALSE;
    drupal_set_message(t("This person is demo content and cannot be edited or deleted.<br/>To remove this person you must <a href='@disable-people-content'>disable demo content for people</a>.", array('@disable-people-content' => url('admin/apps/local/sitenow_people/configure'))), 'warning');
  }
}

/**
* Implements hook_form_FORM_ID_alter().
*
* disable deletion of demo content from find content bulk operation.
*/

function sitenow_people_content_form_node_admin_content_alter(&$form, &$form_state, $form_id) {
  if (isset($form_state['values']['operation']) && $form_state['values']['operation'] == 'delete') {
    foreach ($form_state['values']['nodes'] as $key => $value) {
      if ($value != 0) {
        $node = node_load($value);
        if ($node->type == 'people' && _sitenow_people_content_get_demo_content($node->nid) == TRUE) {
          $form['actions']['submit']['#access'] = FALSE;
          drupal_set_message(t("This person is demo content and cannot be edited or deleted.<br/>To remove this person you must <a href='@disable-people-content'>disable demo content for people</a>.", array('@disable-people-content' => url('admin/apps/local/sitenow_people/configure'))), 'warning');
        }
      }
    }
  }
}

/**
* Implements hook_form_FORM_ID_alter().
*
* disable edit and deletion of demo content files.
*/

function sitenow_people_content_form_file_entity_edit_alter(&$form, &$form_state, $form_id) {
  // load usage info
  $usage = file_usage_list($form['#entity']);
  // only check to see if it is demo content if it is bein used
  if ($usage) {
    // loop through each node
    foreach ($usage['file']['node'] as $key => $value) {
      // check if node used on is demo content
      $is_demo = _sitenow_people_content_get_demo_content($key);
      if ($is_demo == TRUE) {
        drupal_set_message(t("This file is demo content and cannot be edited or deleted.<br/>To remove this file you must <a href='@disable-people-content'>disable demo content for people</a>.", array('@disable-people-content' => url('admin/apps/local/sitenow_people/configure'))), 'warning');
        $form['#disabled'] = TRUE;
      }
    }
  }
}

/**
* Implements hook_form_FORM_ID_alter().
*
* disable deletion of demo content files from file/$fid/delete.
*/

function sitenow_people_content_form_file_entity_delete_form_alter(&$form, &$form_state, $form_id) {
  // load file object
  $file = file_load($form['fid']['#value']);
  // load usage info
  $usage = file_usage_list($file);
  // only check to see if it is demo content if it is bein used
  if ($usage) {
    foreach ($usage['file']['node'] as $key => $value) {
      $is_demo = _sitenow_people_content_get_demo_content($key);
      if ($is_demo == TRUE) {
        drupal_set_message(t("This file is demo content and cannot be edited or deleted.<br/>To remove this file you must <a href='@disable-people-content'>disable demo content for people</a>.", array('@disable-people-content' => url('admin/apps/local/sitenow_people/configure'))), 'warning');
        $form['actions']['submit']['#access'] = FALSE;
      }
    }
  }
}

/**
* Implements hook_form_FORM_ID_alter().
*
* disable deletion of demo content files through bulk operation.
*/

function sitenow_people_content_form_file_entity_admin_file_alter(&$form, &$form_state, $form_id) {
  if (isset($form_state['values']['operation']) && $form_state['values']['operation'] == 'delete') {
    foreach ($form_state['values']['files'] as $key => $value) {
      if ($value != 0) {
        $file = file_load($value);
        $usage = file_usage_list($file);
        $is_demo = FALSE;
        foreach ($usage['file']['node'] as $key => $value) {
          // check if node used on is demo content
          if (_sitenow_people_content_get_demo_content($key) == TRUE) {
            $is_demo =TRUE;
          }
        }
        if ($is_demo == TRUE) {
          drupal_set_message(t("This file is demo content and cannot be edited or deleted.<br/>To remove this file you must <a href='@disable-people-content'>disable demo content for people</a>.", array('@disable-people-content' => url('admin/apps/local/sitenow_people/configure'))), 'warning');
          $form['actions']['submit']['#access'] = FALSE;
        }
      }
    }
  }
}

/**
* Implements hook_form_FORM_ID_alter().
*
* disable edit and deletion of demo content taxonomy terms.
*/

function sitenow_people_content_form_taxonomy_form_term_alter(&$form, &$form_state, $form_id) {
  $usage = taxonomy_select_nodes($form['tid']);
  $is_demo = FALSE;
  foreach ($usage as $value) {
    if(_sitenow_people_content_get_demo_content($value) == TRUE) {
      $is_demo =TRUE;
    }
  }
  if ($is_demo == TRUE) {
    drupal_set_message(t("This term is demo content and cannot be edited or deleted.<br/>To remove this term you must <a href='@disable-people-content'>disable demo content for people</a>.", array('@disable-people-content' => url('admin/apps/local/sitenow_people/configure'))), 'warning');
    $form['#disabled'] = TRUE;
  }
}

/**
* Custom function to check and see if node has ever been migrated.
* If migrated we assume it is demo content and returns true else returns false
*
* param nid
*/
function _sitenow_people_content_get_demo_content($nid) {
  // initialize return value
  $demo = FALSE;
  if (isset($nid)) {
    // query migrate_map_sitenowpeople to see if nid exists
    $results = db_select('migrate_map_sitenowpeople', 'm')
      ->fields('m', array('destid1'))
      ->condition('destid1', $nid,'=')
      ->execute();

    // initialize array to hold results
    $contents = array();
    // loop through results and assign to array
    foreach($results as $result) {
      $contents[] = $result->destid1;
    }
    // check to see if any results
    if(count($contents)) {
      // set return value to true if there are results
      $demo = TRUE;
    }
  }
  return $demo;
}
